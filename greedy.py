# -*- coding: utf-8 -*-
"""greedy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sMjUapUUFJlc71fUJCZHyIv-KQYQ8w5m

# Rule of big number

* Q: In the array of N elements, you should produce the biggest number by adding the given numbers M times with replacement but no more than K consequtive repetition.
* EX) if the array is given that 2, 4, 5, 4, 6 with M = 8, K = 3, your summation should look like 6 + 6 + 6 + 5 + 6 + 6 + 6 + 5 = 46.
"""

# get number splitting by empty space
n, m, k = map(int, input().split(" "))

# get N numbers splitting by empty space
data = list(map(int, input().split(' ')))

# rule of a big number
data.sort(reverse=True)
# print(data)

count = 0
sum = 0

for i in range(m):
  if count < k:
    sum += data[0]
    count += 1
#    print(data[0])
  else:
    sum += data[1]
    count = 0
#    print(data[1])

print(sum)

# approaching to mathematical pattern
data.sort(reverse=True)
first = data[0]
second = data[1]

pattern = k + 1

sum = (first * k + second) * (m // pattern) + (first * (m % pattern))

print(sum)

"""# Number Card Game

* Q:
  1. Each card is formatted like N x M, where N = row and M = column.
  2. You choose the row and pick the smallest number in the row.
  3. After N turns, you win if your card has the biggest number.
"""

import numpy as np

# getting numbers splitting by empty space
n, m = map(int, input().split())

min_val = []
for i in range(n):
  data = list(map(int, input().split()))
  min_val.append(min(data))

print(max(min_val))

"""# 1이 될 때까지"""

n, k = map(int, input().split())

result = 0

while n >= k:
  if n%k == 0:
    result += 1
    n //= k
    # print(n, result)
  else:
    result += n % k
    n -= n % k
    # print(n,result)

if n != 1:
  result += n % k - 1
  # print(n, result)

print(result)

